{"version":3,"sources":["api/darksky.js","api/mapbox.js","components/TempCard.js","components/PlaceInput.js","components/App.js","index.js"],"names":["getForecast","location","fetch","lat","long","then","res","json","getCoords","place","TempInfo","props","forecast","className","temperature","summary","windSpeed","PlaceInput","state","onSubmit","e","preventDefault","onFormSubmit","setState","this","type","onChange","target","value","placeholder","React","Component","App","mapbox","undefined","mapBoxData","features","center","darksky","currently","nextProps","nextState","JSON","stringify","TempCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAOeA,MALf,SAAqBC,GACpB,OAAOC,MAAM,wEAAD,OAHD,mCAGC,YAAgFD,EAASE,IAAzF,YAAgGF,EAASG,KAAzG,sBACXC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,WCEDC,MAJf,SAAmBC,GAClB,OAAOP,MAAM,qDAAD,OAAsDO,EAAtD,8BAHD,2FAGyFJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCkBtGG,EAnBE,SAACC,GACd,OAAsB,OAAnBA,EAAMC,SAED,yBAAKC,UAAU,YACX,6DAKR,yBAAKA,UAAU,YACX,4BAAKF,EAAMF,OACX,6BACA,2CAAiBE,EAAMC,SAASE,YAAhC,WACA,uCAAaH,EAAMC,SAASG,SAC5B,0CAAgBJ,EAAMC,SAASI,UAA/B,wBCSGC,E,4MAtBXC,MAAQ,CACJT,MAAO,I,EAGXU,SAAW,SAACC,GACRA,EAAEC,iBACF,EAAKV,MAAMW,aAAa,EAAKJ,MAAMT,OACnC,EAAKc,SAAS,CAAEd,MAAO,M,uDAGjB,IAAD,OACL,OACI,yBAAKI,UAAU,cACX,0BAAMM,SAAUK,KAAKL,UACjB,2BAAOM,KAAK,OAAOC,SAAU,SAACN,GAAD,OAAO,EAAKG,SAAS,CAAEd,MAAOW,EAAEO,OAAOC,SAAUA,MAAOJ,KAAKN,MAAMT,MAAOoB,YAAY,wB,GAf9GC,IAAMC,WC8ChBC,E,4MAxCXd,MAAQ,CACJT,MAAO,GACPG,SAAU,M,EAGdU,aAAe,SAACb,GACZ,EAAKc,SAAS,CAAEd,MAAOA,K,uMAIEwB,EAAOT,KAAKN,MAAMT,O,eAChByB,KADrBC,E,QACQC,S,uBACVZ,KAAKD,SAAS,CAAEX,SAAU,O,iCAGxBX,EAAW,CACbE,IAAKgC,EAAWC,SAAS,GAAGC,OAAO,GACnCjC,KAAM+B,EAAWC,SAAS,GAAGC,OAAO,I,SAEjBC,EAAQrC,G,OAAzBW,E,OACNY,KAAKD,SAAS,CAACX,SAAUA,EAAS2B,Y,mJAGhBC,EAAWC,GAC7B,OAAGC,KAAKC,UAAUnB,KAAKN,SAAWwB,KAAKC,UAAUF,K,+BAOjD,OACI,yBAAK5B,UAAU,aACX,kBAAC,EAAD,CAAYS,aAAcE,KAAKF,eAC/B,kBAACsB,EAAD,CAAUnC,MAAOe,KAAKN,MAAMT,MAAOG,SAAUY,KAAKN,MAAMN,gB,GApCtDkB,IAAMC,WCFxBc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e23e8678.chunk.js","sourcesContent":["const key = '67576ce93d3a18c6df4b6e4472f95a54';\r\n\r\nfunction getForecast(location){\r\n\treturn fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${key}/${location.lat},${location.long}?lang=ru&units=si`)\r\n\t.then(res=>res.json());\r\n}\r\n\r\nexport default getForecast","const key = 'pk.eyJ1Ijoib3JpenoiLCJhIjoiY2s1Mm51azZ5MDAzejNtbnBxc3Q3dzhrZiJ9.aNybnkVwEWY8evkhKrPUTA';\r\n\r\nfunction getCoords(place){\r\n\treturn fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${place}.json?access_token=${key}`).then(res => res.json());\r\n}\r\n\r\nexport default getCoords;","import React from 'react';\r\n\r\nconst TempInfo = (props) => {\r\n    if(props.forecast === null) {\r\n        return(\r\n            <div className='tempCard'>\r\n                <p>Input place to get a forecast</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className='tempCard'>\r\n            <h2>{props.place}</h2>\r\n            <br />\r\n            <p>Temperature: {props.forecast.temperature} &#8451;</p>\r\n            <p>Summary: {props.forecast.summary}</p>\r\n            <p>Wind speed: {props.forecast.windSpeed} meters per second</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempInfo;","import React from 'react';\r\n\r\nclass PlaceInput extends React.Component {\r\n    state = {\r\n        place: ''\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onFormSubmit(this.state.place);\r\n        this.setState({ place: '' });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='placeInput'>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type='text' onChange={(e) => this.setState({ place: e.target.value })} value={this.state.place} placeholder=\"Input a place\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default PlaceInput;","import React from 'react';\r\nimport darksky from '../api/darksky';\r\nimport mapbox from '../api/mapbox';\r\nimport TempCard from './TempCard';\r\nimport PlaceInput from './PlaceInput'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        place: '',\r\n        forecast: null,\r\n    }\r\n\r\n    onFormSubmit = (place) => {\r\n        this.setState({ place: place });\r\n    };\r\n\r\n    async componentDidUpdate() {\r\n        const mapBoxData = await mapbox(this.state.place);\r\n        if(mapBoxData.features === undefined) {\r\n            this.setState({ forecast: null });\r\n            return;\r\n        }\r\n        const location = {\r\n            lat: mapBoxData.features[0].center[1],\r\n            long: mapBoxData.features[0].center[0],\r\n        }\r\n        const forecast = await darksky(location);\r\n        this.setState({forecast: forecast.currently})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(JSON.stringify(this.state) === JSON.stringify(nextState)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <PlaceInput onFormSubmit={this.onFormSubmit} />\r\n                <TempCard place={this.state.place} forecast={this.state.forecast} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}